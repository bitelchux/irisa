:root {
  --board-color: #3498db;
  --board-percent-size: 84;
}

@keyframes pulsate {
  0% { transform: scale(1); }
  50% { transform: scale(1.2); }
  100% { transform: scale(1); }
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

html {
  box-sizing: border-box;
  height: 100%;
  width: 100%;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  background-color: white;
  display: flex;
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
}

#app {
  background-color: var(--board-color);
  border-radius: 5%;
  margin: auto;
  padding: 4vmin;

  /* Resize to fill percent of viewport while maintaining aspect ratio. */
  height: var(--board-percent-size)vmin;
  width: var(--board-percent-size)vmin;
}

main {
  position: relative;
  height: 100%;
  width: 100%;
}

.entity {
  background-position: center center;
  background-repeat: no-repeat;
  background-size: 90%;
  position: absolute;

}

.door {
  animation: pulsate 2s infinite;
  background-image: url(static/img/door.svg);
  z-index: 0;
}

.enemy {
  animation: spin 3s infinite linear;
  background-image: url(static/img/enemy.svg);
  transition: all 0.6s;
  z-index: 2;

  &.disabled {
    opacity: 0;
  }
}

.freeze-time {
  transition: all 0.2s;

  &.disabled {
    opacity: 0;
  }

  &.for-1-turns { background-image: url(static/img/freezetime1.svg); }
  &.for-2-turns { background-image: url(static/img/freezetime2.svg); }
  &.for-3-turns { background-image: url(static/img/freezetime3.svg); }
  &.for-4-turns { background-image: url(static/img/freezetime4.svg); }
}

.player {
  background-image: url(static/img/player.svg);
  transition: all 0.2s;
  z-index: 1;
}

.teleporter {
  background-image: url(static/img/teleporter.svg);
}

.wall {
  background-image: url(static/img/wall.svg);
  z-index: 0;
}
